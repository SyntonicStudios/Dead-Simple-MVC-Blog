@model SyntonicStudios.SSWebsite.Domain.Entities.BlogPost

@{
    ViewBag.Title = "Admin: Edit " + @Model.Subject;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Editing: @Model.Subject <span class="badge badge-info">ID: @Model.BlogPostID</span></h2>

@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @class="form-horizontal" }))
{
    @*Html.EditorForModel()*@
    @Html.ValidationSummary()
    @* , new { @class="span5" } *@
    @* , disabled="disabled"  *@
    @Html.Hidden("BlogPostID", @Model.BlogPostID)
    @*
    <div class="control-group">
        <label class="control-label">BlogPostID: </label><div class="controls">@Html.TextBoxFor(x => x.BlogPostID, new { @class="span7"} )</div>
    </div>
    *@
    <div class="control-group">
        <label class="control-label">CategoryID: </label><div class="controls">@Html.TextBoxFor(x => x.CategoryID, new { @class="span7" } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">Subject: </label><div class="controls">@Html.TextBoxFor(x => x.Subject, new { @class="span7" } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">Body: </label><div class="controls">@Html.TextAreaFor(x => x.Body, new { @class="span7", rows="5" } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">Teaser: </label><div class="controls">@Html.TextAreaFor(x => x.Teaser, new { @class="span7", rows="5" } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">DatePosted: </label><div class="controls">@Html.TextBoxFor(x => x.DatePosted, new { @class="span7", @Value = Model.DatePosted.ToString("MM/dd/yyyy") } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">PostedBy: </label><div class="controls">@Html.TextBoxFor(x => x.PostedBy, new { @class="span7" } )</div>
    </div>
    <div class="control-group">
        <label class="control-label">UrlDisplay: </label><div class="controls">@Html.TextBoxFor(x => x.UrlDisplay, new { @class="span7" } )</div>
        <div class="controls">@Html.ValidationMessageFor(x => x.UrlDisplay)</div>
    </div>

    <div class="form-actions">
        @if (@HttpContext.Current.User.Identity.Name == "guest")
        {
            @*<input type="submit" value="Save" class="btn btn-primary" />*@
            <a href="#myModal" role="button" class="btn btn-primary" data-toggle="modal"><i class="icon-ok icon-white"></i> Save</a>
            <a class="btn" href="@Url.Action("Index")"><i class="icon-step-backward"></i> Cancel and return to List</a>
            @*Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn" })*@
        }
        else
        {
            @*<input type="submit" value="Save" class="btn btn-primary" />*@
            <button type="submit" class="btn btn-primary">
                <i class="icon-ok icon-white"></i> Save
            </button>
            <a class="btn" href="@Url.Action("Index")"><i class="icon-step-backward"></i> Cancel and return to List</a>
            @*Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn" })*@   
        }
    </div>
}
